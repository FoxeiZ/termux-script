#!/data/data/com.termux/files/usr/bin/bash -e

SOURCE="GDCrypt-remiliascarlet:"
TARGET=""
CONFIG_FILE="/data/data/com.termux/files/home/.config/rclone/rclone.conf"
REAL_USER="u0_a325"

usage() {
    echo "Error: $1" >&2
    echo "Usage: $0 -t <mount_folder> [-s <source>] [-c <config_file>] [-u <real_user>] [-- <rclone mount options>]"
    echo "  -t <mount_folder>    (Required) The destination folder to mount."
    echo "  -s <source>          (Optional) The rclone remote source. Default: \"$SOURCE\""
    echo "  -c <config_file>     (Optional) Path to rclone config file."
    echo "  -u <real_user>       (Optional) The user to own the config file."
    exit 1
}

while getopts ":t:s:c:u:" opt; do
    case $opt in
        s) SOURCE="$OPTARG" ;;
        t) TARGET="$OPTARG" ;;
        c) CONFIG_FILE="$OPTARG" ;;
        u) REAL_USER="$OPTARG" ;;
        \?) usage "Invalid option: -$OPTARG" ;;
        :) usage "Option -$OPTARG requires an argument." ;;
    esac
done

if [ -z "$TARGET" ]; then
    usage "The mount folder (-t) option is required."
fi

shift $((OPTIND-1))
RCLONE_OPTS=("$@")

Unmount() {
    fusermount -u "$TARGET" || true
}

ResetPermConfig() {
    chown "$REAL_USER":"$REAL_USER" "$CONFIG_FILE"
}

echo "Attempting to unmount any existing mount at $TARGET..."
Unmount

trap 'echo "Cleaning up..."; sleep 1; ResetPermConfig; Unmount; echo "Cleanup complete."' EXIT

echo "Mounting \"$SOURCE\" to \"$TARGET\"..."
rclone --config "$CONFIG_FILE" mount "$SOURCE" "$TARGET" \
--allow-other \
--gid 9997 \
--dir-perms 0771 \
--file-perms 0660 \
--umask=0 \
--no-modtime \
--vfs-cache-mode full \
--vfs-cache-max-size 2G \
--vfs-cache-max-age 30m \
--vfs-read-chunk-size 128M \
--vfs-read-chunk-size-limit 1G \
--vfs-fast-fingerprint \
--vfs-links \
--vfs-write-wait 3s \
--vfs-refresh \
--dir-cache-time 96h \
--buffer-size 0 \
--tpslimit 10 \
--drive-pacer-min-sleep 10ms \
--drive-pacer-burst 200 \
--poll-interval 5m \
--checkers 4 \
--async-read \
"${RCLONE_OPTS[@]}"